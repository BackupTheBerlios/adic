GAMEPLAY:
- sichtbarkeit einschränken

TUNING:
- alpha-blending with mesa too slow - test alpha values of 0/1 with DrawPixels 
  (did not help)
  how do transparent (not semi-transparent/alpha blended) sprites work in opengl / colorkeying
  stencil buffer ? there should be an easy solution
- stepsize tunen (maxspeed*stepsize=maxstep mit maxstep=wallthickness => stepsize=wallthickness/maxspeed)
- tueren uebertragen viel zu viel (angle und anglespeed sollte genuegen)
- uebertrage nur tueren/spieler die sich bewegt haben
- drawCircle ist lahm
- collision:
	- collision is good but still not perfect
	  think about the right point for a commit (the best would be before a step now?)
	- kollision in räume unterteilen
	  da spieler in max. 2 räumen sein können ist das problem rel. einfach dadurch zu lösen,
	  daß ich erst schaue in welchem raum ist der spieler und dann schaue ob der spieler mit
	  einer türkante kollidiert falls ja ist er auch im benachbarten raum
	  auf der anderen seite liegt der worst case, daß sich alle spieler in einem raum tummeln durchaus
	  im bereich des möglichen (zumindest solange die räume so groß sind uns es keine unsichtbaren
	  kanten gibt)
- ersetze DOPE_CHECK durch assert wo sinnvoll
- mesa
- skaliert schlecht zumindest der client
- profiling (especially the client)
  i think the most time is consumed in the client
  for the lag compensation (is disabled now)
- einfacher blit mit glDrawPixels fürs Menü und evtl sogar für andere sachen die nicht gedreht werden
  (glDrawPixels ist bei mesa schneller als texturen)
- compilation times (the preprocessor needs already much time => simplify the includes)
  just paint some picture and think about the dependencies

FEATURES:
- spielereigenschaften sollten relativ zu einem "globalen" spielereigenschaften objekt sein
  => man kann z.bsp leicht alle spieler schneller machen
- mehr sounds
- restrukturiere mesh
  mesh hat sachen die da nicht reingehören
  neue class level die eine uri auf die mesh hat
  und ansonsten die startpos. und so
- mesh/level muß vom server zum client übertragen werden
- server muß levels in round-robin haben
- sound:
  - (walking, breath, ...)
- improve the physics
- MOTIVATION zum riskanten rumlaufen:
  - evtl. betten/sessel wo man sich hinlegen/hinsetzen kann
- locked anzeigen
- AI gegner oder robots (könnte rumlaufen und türen schließen)
- i18n (localization)
- client should use metaserver
- schlüssel
- Türen kaputtbar
- disconnected players should be removed
- record movies 
-  (time-travelling - portal gets you back in time and you have a limited amount of time to change
   what happens)
- ping


BUGS/QUESTIONS:
- it is easy to block/crash the server (DoS-Attack) - this is mainly a dope TODO
- win codition wrong ? teamStat wrong ? i think this is fixed now
- uriloader muss besser werden
  => uriloader sollte immer verwendet werden
  => eine gescheite uri klasse
- spieler auf teams verteilen scheint nicht immer zu klappen
  v.a. wenn selbst benannte teams dabei sind ?
- client crash in fullscreen mode => X schwer brauchbar da maus fehlt und auflösung falsch
- zu viele sounds auf einmal v.a. bei kollisionen
- teamID and playerID are now 16bit but I often use unsigned and ~0U
  check if this is still all correct
- terminal hat nen bug da es davon ausgeht dass zeilenweise geschrieben wird
- we now rely upon the same fpu precision on every machine ? 
  (make some tests with dope)
- server closes connection, client "dies" -> print nice message and exit
- dope todo: darüber nachdenken
  ob das cache konzept so richtig ist - ich glaube es wird nicht kopiert => objekte im cache
  können verändert werden)

MISC:
- compile with -O9 and check the warnings about uninitialized usage
- generic_pointer funktioniert ?
	nur nicht bei xmlsaxinstream
	=> entweder schreibe xmldominstream oder neuen xmlsaxinstream
- a thanks file
  thanks to the unknown creator of the mod file
  thanks to the xemacs people for the wav file
- der genericpointer ist gut fuer dope - nicht loeschen
- clean up
- resize bug:
  this is probably a bug in sawfish or libSDL - but not in ADIC

CROSS-COMPILE to WIN with mingw:
- solve the min max problem (std::min did not work on mingw 3.1.?)
  this was because winver.h (or similar) did define min and max
  now i could use std::min/max again
- wrong GL.h is included - i think simply disabling the check should be enough if SDL
  is configured correct - i disabled the check is it fixed now ?
- adic client still just crashes win
