GAMEPLAY:
- sichtbarkeit einschränken

TUNING:
- reduce latency
  1) tcp/ip options
  2) game::step loops
     if it takes long (measure first) move the loop into the main loop and check for network traffic
     and perhaps new input
- alpha-blending with mesa too slow - test alpha values of 0/1 with DrawPixels 
  (did not help)
  how do transparent (not semi-transparent/alpha blended) sprites work in opengl / colorkeying
  stencil buffer ? there should be an easy solution
- stepsize tunen (maxspeed*stepsize=maxstep mit maxstep=wallthickness => stepsize=wallthickness/maxspeed)
- tueren uebertragen viel zu viel (angle und anglespeed sollte genuegen)
- uebertrage nur tueren/spieler die sich bewegt haben
- drawCircle ist lahm
- collision:
	- collision is good but still not perfect
	  think about the right point for a commit (the best would be before a step now?)
	- kollision in räume unterteilen
	  da spieler in max. 2 räumen sein können ist das problem rel. einfach dadurch zu lösen,
	  daß ich erst schaue in welchem raum ist der spieler und dann schaue ob der spieler mit
	  einer türkante kollidiert falls ja ist er auch im benachbarten raum
	  auf der anderen seite liegt der worst case, daß sich alle spieler in einem raum tummeln durchaus
	  im bereich des möglichen (zumindest solange die räume so groß sind uns es keine unsichtbaren
	  kanten gibt)
- ersetze DOPE_CHECK durch assert wo sinnvoll
- mesa
- skaliert schlecht zumindest der client
- profiling (especially the client)
  i think the most time is consumed in the client
  for the lag compensation (is disabled now)
- einfacher blit mit glDrawPixels fürs Menü und evtl sogar für andere sachen die nicht gedreht werden
  (glDrawPixels ist bei mesa schneller als texturen)
- compilation times (the preprocessor needs already much time => simplify the includes)
  just paint some picture and think about the dependencies

FEATURES:
- spielereigenschaften sollten relativ zu einem "globalen" spielereigenschaften objekt sein
  => man kann z.bsp leicht alle spieler schneller machen
- mehr sounds
- restrukturiere mesh
  mesh hat sachen die da nicht reingehören
  neue class level die eine uri auf die mesh hat
  und ansonsten die startpos. und so
- mesh/level muß vom server zum client übertragen werden
- server muß levels in round-robin haben
- sound:
  - (walking, breath, ...)
- improve the physics
- MOTIVATION zum riskanten rumlaufen:
  - evtl. betten/sessel wo man sich hinlegen/hinsetzen kann
- locked anzeigen
- AI gegner oder robots (könnte rumlaufen und türen schließen)
- i18n (localization)
- client should use metaserver
- schlüssel
- Türen kaputtbar
- disconnected players should be removed
- record movies 
-  (time-travelling - portal gets you back in time and you have a limited amount of time to change
   what happens)
- ping


BUGS/QUESTIONS:
- time skew => crash
FATAL: timestamp.cpp:128:TimeStamp& TimeStamp::operator-=(const TimeStamp&): x.tv_sec<y.tv_sec: 1033831728<1033831729 (1033831728+136369*10^-6) - (1033831729+4096*10^-6)(errno=0:Success)
Obtained 7 stack frames.
[0x808d4cd]
[0x808db0c]
[0x808d7d1]
[0x806e216]
[0x807016b]
[0x812f615]
[0x8048101]
Abgebrochen

ZDV:
Metaserver RPC result: 0=success
FATAL: timestamp.cpp:128:TimeStamp& TimeStamp::operator-=(const TimeStamp&): x.tv_sec<y.tv_sec: 1033918120<1033918121 (1033918120+123024*10^-6) - (1033918120+990898*10^-6)(errno=0:Success)
Obtained 7 stack frames.
[0x80652ed]
[0x806592c]
[0x80655f1]
[0x8059306]
[0x805b25b]
[0x80c3ad5]
[0x8048101]

(gdb) x 0x80652ed
0x80652ed <_Z14dope_backtracev+29>:	0x5a58c689
(gdb) x 0x806592c
0x806592c <_ZN9TimeStampmIERKS_+764>:	0x0c38dfe8
(gdb) x 0x80655f1
0x80655f1 <_ZNK9TimeStampmiERKS_+33>:	0x084d8b5b
(gdb) x 0x8059306
0x8059306 <_ZN6Server4mainEv+3190>:	0xfe78858b
(gdb) x 0x805b25b
0x805b25b <main+1099>:	0xcf83c689
(gdb) x 0x80c3ad5
0x80c3ad5 <__libc_start_main+213>:	0xcf55e850
(gdb) x 0x8048101
0x8048101 <_start+33>:	0x55f689f4
equals:
0x80652ed <dope_backtrace()+29>:	0x5a58c689
0x806592c <TimeStamp::operator-=(TimeStamp const&)+764>:	0x0c38dfe8
0x80655f1 <TimeStamp::operator-(TimeStamp const&) const+33>:	0x084d8b5b
0x8059306 <Server::main()+3190>:	0xfe78858b
0x805b25b <main+1099>:	0xcf83c689
0x80c3ad5 <__libc_start_main+213>:	0xcf55e850
:


- on win32 systems textures get corrupted if you switch between windowed and fullscreen mode
- the wall collide return -cv instead of cv
- it is easy to block/crash the server (DoS-Attack) - this is mainly a dope TODO
- win codition wrong ? teamStat wrong ? i think this is fixed now
- uriloader muss besser werden
  => uriloader sollte immer verwendet werden
  => eine gescheite uri klasse
- spieler auf teams verteilen scheint nicht immer zu klappen
  v.a. wenn selbst benannte teams dabei sind ?
- client crash in fullscreen mode => X schwer brauchbar da maus fehlt und auflösung falsch
- zu viele sounds auf einmal v.a. bei kollisionen
- teamID and playerID are now 16bit but I often use unsigned and ~0U
  check if this is still all correct
- terminal hat nen bug da es davon ausgeht dass zeilenweise geschrieben wird
- we now rely upon the same fpu precision on every machine ? 
  (make some tests with dope)
- server closes connection, client "dies" -> print nice message and exit
- dope todo: darüber nachdenken
  ob das cache konzept so richtig ist - ich glaube es wird nicht kopiert => objekte im cache
  können verändert werden)

BOTS:
- write docu - bot HOWTO

MISC:
- compile with -O9 and check the warnings about uninitialized usage
- generic_pointer funktioniert ?
	nur nicht bei xmlsaxinstream
	=> entweder schreibe xmldominstream oder neuen xmlsaxinstream
- a thanks file
  thanks to the unknown creator of the mod file
  thanks to the xemacs people for the wav file
- der genericpointer ist gut fuer dope - nicht loeschen
- clean up (split source into multiple directories ?)
  perhaps make a libadic (but until gcc 3.2 isn't standard this wouldn't help much when distributing
  binaries)
- resize bug:
  this is probably a bug in sawfish or libSDL - but not in ADIC

CROSS-COMPILE to WIN with mingw:
- solve the min max problem (std::min did not work on mingw 3.1.?)
  this was because winver.h (or similar) defines min and max (if NOMINMAX is not defined)
  now i could use std::min/max again
- wrong GL.h is included - i think simply disabling the check should be enough if SDL
  is configured correct - i disabled the check is it fixed now ?

